high="red") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc2.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.2))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.2),
max(contrib_df$Dim.2)),
low="blue",
high="red") +
labs(title = "Variable contribution to the PC2",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC2 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc3.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.3))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.3),
max(contrib_df$Dim.3)),
low="blue",
high="red") +
labs(title = "Variable contribution to the PC3",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC3 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc4.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.4))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.4),
max(contrib_df$Dim.4)),
low="blue",
high="red") +
labs(title = "Variable contribution to the PC4",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC4 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
combine.rainbow <- grid.arrange(pc1.rainbow.plot,
pc2.rainbow.plot,
pc3.rainbow.plot,
pc4.rainbow.plot,
ncol = 1)
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="steelblue",
high="red") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc2.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.2))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.2),
max(contrib_df$Dim.2)),
low="steelblue",
high="red") +
labs(title = "Variable contribution to the PC2",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC2 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc3.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.3))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.3),
max(contrib_df$Dim.3)),
low="steelblue",
high="red") +
labs(title = "Variable contribution to the PC3",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC3 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc4.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.4))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.4),
max(contrib_df$Dim.4)),
low="steelblue",
high="red") +
labs(title = "Variable contribution to the PC4",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC4 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
combine.rainbow <- grid.arrange(pc1.rainbow.plot,
pc2.rainbow.plot,
pc3.rainbow.plot,
pc4.rainbow.plot,
ncol = 1)
pca.results$eig
pca.results
install.packages("pracma")
library(pracma)
# peak picking
mean_spectra_fp <- findpeaks(mean_spectra$Wavenumber,
minpeakheight = 0.01)
mean_spectra_pi <- mean_spectra_fp[, 2]
mean_spectra_peaks <- data.frame(
Wavenumber = mean_spectra$Wavenumber[mean_spectra_pi],
Intensity = mean_spectra_fp[, 1])
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "blue") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
View(mean_spectra_peaks)
# peak picking
mean_spectra_fp <- findpeaks(mean_spectra$Wavenumber,
minpeakheight = 0.01)
mean_spectra_fp
# peak picking
mean_spectra_fp <- findpeaks(mean_spectra$Intensity,
minpeakheight = 0.01)
mean_spectra_fp
mean_spectra_pi <- mean_spectra_fp[, 2]
mean_spectra_peaks <- data.frame(
Wavenumber = mean_spectra$Wavenumber[mean_spectra_pi],
Intensity = mean_spectra_fp[, 1])
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "blue") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
ylim(0, 1.5) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
ylim(0, 1.25) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
ylim(0, 1.10) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
ylim(0, 1.10) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
pc2.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.2))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.2),
max(contrib_df$Dim.2)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC2",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC2 (%)") +
scale_x_reverse() +
ylim(0, 1.10) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc3.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.3))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.3),
max(contrib_df$Dim.3)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC3",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC3 (%)") +
scale_x_reverse() +
ylim(0, 1.10) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc4.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.4))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.4),
max(contrib_df$Dim.4)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC4",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC4 (%)") +
scale_x_reverse() +
ylim(0, 1.10) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
combine.rainbow <- grid.arrange(pc1.rainbow.plot,
pc2.rainbow.plot,
pc3.rainbow.plot,
pc4.rainbow.plot,
ncol = 1)
ggsave("rainbow_plot.svg", plot = combine.rainbow, width = 21, height = 29.7, units = "cm")
# plot the RainbowSpectrum
pc1.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.1))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.1),
max(contrib_df$Dim.1)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC1",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC1 (%)") +
scale_x_reverse() +
ylim(0, 1.15) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc1.rainbow.plot
pc2.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.2))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.2),
max(contrib_df$Dim.2)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC2",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC2 (%)") +
scale_x_reverse() +
ylim(0, 1.15) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc3.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.3))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.3),
max(contrib_df$Dim.3)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC3",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC3 (%)") +
scale_x_reverse() +
ylim(0, 1.15) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
pc4.rainbow.plot <- ggplot(mean_spectra, aes(x = Wavenumber, y = Intensity, group = 1)) +
geom_line(size = 1, aes(color = abs(contrib_df$Dim.4))) +
scale_color_gradient(limits = c(min(contrib_df$Dim.4),
max(contrib_df$Dim.4)),
low="green",
high="red") +
geom_segment(data = mean_spectra_peaks, aes(x = Wavenumber, xend = Wavenumber,
y = Intensity + 0.02, yend = Intensity),  # Small vertical lines
color = "red", size = 1) +  # Adjust size for thickness of notches
# Add vertical text labels for the peaks directly on top of the notches
geom_text(data = mean_spectra_peaks, aes(x = Wavenumber, y = Intensity + 0.02,  # Adjust position above the notch
label = round(Wavenumber, 0)),
angle = 90, vjust = 0, hjust = 0, color = "black") +
labs(title = "Variable contribution to the PC4",
x = "Wavenumber",
y = "Intensity",
color = "Contribution to \n the PC4 (%)") +
scale_x_reverse() +
ylim(0, 1.15) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5))
combine.rainbow <- grid.arrange(pc1.rainbow.plot,
pc2.rainbow.plot,
pc3.rainbow.plot,
pc4.rainbow.plot,
ncol = 1)
ggsave("rainbow_plot.svg", plot = combine.rainbow, width = 21, height = 29.7, units = "cm")
install.packages("BiocManager")
BiocManager::install("xcms")
# load libraries
library(xcms)
# set the working directory - results
setwd(choose.dir())
# select path where sub folders are located
mzxml_path <- choose.dir()
# select files
mzxml_files <- dir(mzxml_path, full.names = TRUE, recursive = TRUE)
BiocManager::install("xcms")
# load libraries
library(xcms)
# set the working directory - results
setwd(choose.dir())
# select path where sub folders are located
mzxml_path <- choose.dir()
# select files
mzxml_files <- dir(mzxml_path, full.names = TRUE, recursive = TRUE)
# import traw data into XCMS
raw_data <- readMSData(mzxml_files,
pdata = NULL, # metadata table to add
mode = "onDisk")
BiocManager::install("MSnbase")
BiocManager::install("MSnbase", force = TRUE)
BiocManager::install("MSnbase")
# import traw data into XCMS
raw_data <- readMSData(mzxml_files,
pdata = NULL, # metadata table to add
mode = "onDisk")
# import traw data into XCMS
raw_data <- readMSData(files = mzxml_files,
pdata = NULL, # metadata table to add
mode = "onDisk")
BiocManager::install("MSnbase")
BiocManager::install("MSnbase", force = TRUE)
gc()
